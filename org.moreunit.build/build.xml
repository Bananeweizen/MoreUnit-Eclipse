<?xml version="1.0" encoding="UTF-8"?>
<project default="build_complete" name="MoreUnit">

	<!-- Specify here the feature and version of the feature to build -->
	<property name="feature_id" value="org.moreunit"/>
	<property name="main_number" value="2"/>
	<property name="major_number" value="3"/>
	<property name="minor_number" value="1"/>


	<!-- PROPERTIES INCLUSION -->
	
	<!--
		Create this file with the following properties:
		
		workspace = ...
		temp_path = ...
		eclipse_path = ...
		
		# you will find the following values in the plugins folder of your Eclipse installation:
		equinox_launcher_jar_name = org.eclipse.equinox.launcher_<version>.jar
		pde_build_folder_name = org.eclipse.pde.build_<version>
	  -->
	<property file="moreunit.properties"/>
	
	<!--
		Create the following file to define the plugins packaged in your feature, in the following format:
		
		feature_plugins=plugin_1_folder/**,plugin_2_folder/**
	-->
	<property file="${feature_id}.properties"/>
	
	<!-- /PROPERTIES INCLUSION -->
	
	
	<property name="version_number" value="${main_number}.${major_number}.${minor_number}"/>
	<property name="version_number_file" value="${main_number}_${major_number}_${minor_number}"/>
	<property name="update-site-project" value="${workspace}/org.moreunit.updatesite"/>
	<property name="repository_folder" value="repository"/>
	
	<!-- Task to merge a new release into an existing update site -->
    <target 
    	name="build_complete" 
    	depends="update_version_number, refresh, prepare_build, build_feature, unzip_feature, metadata, category, merge_build" 
    	description="full build and merge with current updatesite">
        <echo>Build new release version ${version_number}</echo>
    </target>
	
	<property name="p2.build" value="${temp_path}/${repository_folder}"/>
	<property name="p2.repo.location" value="${update-site-project}"/>
    
    <target name="merge_build">
		<p2.mirror source="${p2.build}">
			<destination location="${p2.repo.location}" compressed="true" append="true"/>
			<slicingoptions includeoptional="false" />
		</p2.mirror>        
    </target>

	<target name="feature_export">
		<pde.exportFeatures destination="${temp_path}" exportSource="true" exportType="zip" features="${feature_id}" filename="${feature_id}_V_${version_number_file}.zip" useJARFormat="true" />
	</target>
	
	<target name="unzip_feature">
		<unzip src="${temp_path}/moreunit.build/moreunitbuild/${feature_id}-build.zip" dest="${temp_path}/${feature_id}_V_${version_number_file}/"/>
	</target>
	
	<target name="wait_for_feature">
		<echo>Wait for feature to be finished</echo>
		<sleep seconds="30"/>
	</target>
	
	<target name="refresh">
		<echo>Refreshing feature.xml, MANIFEST.MF, category.xml</echo>
		<eclipse.refreshLocal resource="${feature_id}.feature/feature.xml" depth="infinite"/>
		<eclipse.refreshLocal resource="org.moreunit.plugin/META-INF/MANIFEST.MF" depth="infinite"/>
		<eclipse.refreshLocal resource="org.moreunit.mock/META-INF/MANIFEST.MF" depth="infinite"/>
		<eclipse.refreshLocal resource="org.moreunit.feature/category.xml" depth="infinite"/>
	</target>
	
	<target name="metadata">
		<exec executable="${eclipse_path}/eclipse">
			<arg value="-application"/><arg value="org.eclipse.equinox.p2.publisher.FeaturesAndBundlesPublisher"/>
			<arg value="-metadataRepository"/><arg value="file:${temp_path}/${repository_folder}"/>
			<arg value="-artifactRepository"/><arg value="file:${temp_path}/${repository_folder}"/>
			<arg value="-source"/><arg value="${temp_path}/${feature_id}_V_${version_number_file}/moreunit"/>
			<arg value="-compress"/>
			<arg value="-publishArtifacts"/>
		</exec>
	</target>
	
	<target name="category">
		<exec executable="${eclipse_path}/eclipse">
			<arg value="-application"/><arg value="org.eclipse.equinox.p2.publisher.CategoryPublisher"/>
			<arg value="-metadataRepository"/><arg value="file:${temp_path}/${repository_folder}"/>
			<arg value="-categoryDefinition"/><arg value="file:/${workspace}/org.moreunit.feature/category.xml"/>
			<arg value="-compress"/>
		</exec>
	</target>

	<target name="update_version_number">
		<echo>New version number: ${version_number}</echo>
		<echo>Update version number in feature.xml</echo>
		<replaceregexp 
			file="${workspace}/${feature_id}.feature/feature.xml" 
			match="version=&quot;(0\.0\.0|[0-9]\.[0-9]\.[0-9]\.qualifier)&quot;" 
			replace="version=&quot;${version_number}&quot;"
			byline="true"/>
		<echo>Update version number in MANIFEST.MF</echo>
		<replaceregexp 
			match="Bundle-Version: (0\.0\.0|[0-9]\.[0-9]\.[0-9]\.qualifier)" 
			replace="Bundle-Version: ${version_number}"
			byline="true">
			<fileset dir="${workspace}" includes="${feature_plugins}/META-INF/MANIFEST.MF" />
		</replaceregexp>
		<echo>Add version to category.xml</echo>
		<replace file="${workspace}/org.moreunit.feature/category.xml">
			<replacetoken><![CDATA[<!-- new release -->]]></replacetoken>
			<replacevalue><![CDATA[<feature url="features/FEATURE_ID_X.X.X.jar" id="FEATURE_ID" version="X.X.X">
		<category name="moreunit.org"/>
	</feature>
	<!-- new release -->]]></replacevalue>
		</replace>
		<replace 
			file="${workspace}/org.moreunit.feature/category.xml"
			token="X.X.X" 
			value="${version_number}"/>
		<replace 
			file="${workspace}/org.moreunit.feature/category.xml"
			token="FEATURE_ID"
			value="${feature_id}"/>
	</target>
	
	<target name="prepare_build">
		<delete dir="${temp_path}/moreunit.build/"/>
		<mkdir dir="${temp_path}/moreunit.build/"/>
		<mkdir dir="${temp_path}/moreunit.build/features"/>
		<mkdir dir="${temp_path}/moreunit.build/plugins"/>
		<copy todir="${temp_path}/moreunit.build/features/${feature_id}.feature">
			<fileset dir="${workspace}/${feature_id}.feature"/>
		</copy>
		<copy todir="${temp_path}/moreunit.build/plugins/">
			<fileset dir="${workspace}" includes="${feature_plugins}" />
		</copy>
	</target>
	
    <target name="build_feature" description="description">
    	<exec executable="java">
    		<arg value="-jar"/><arg value="${eclipse_path}/plugins/${equinox_launcher_jar_name}"/>
    		<arg value="-application"/><arg value="org.eclipse.ant.core.antRunner"/>
    		<arg value="-buildfile"/><arg value="${eclipse_path}/plugins/${pde_build_folder_name}/scripts/build.xml"/>
    		<arg value="-Dbuilder=${workspace}/org.moreunit.build"/>
    		<arg value="-Dfeature_id=${feature_id}"/>
    	</exec>
    </target>
</project>